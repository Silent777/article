{"version":3,"sources":["common.js","ArticleList.js","Create.js","Article.js","NotFound.js","serviceWorker.js","index.js","Routes.js"],"names":["Button","styled","div","_templateObject","p","enabled","StyledFont","_templateObject2","HeaderContainer","ArticleList_templateObject","ListItem","ArticleList_templateObject2","ArticleList","state","articles","goToCreate","_this","props","history","push","goToArticle","e","id","target","concat","JSON","parse","window","localStorage","getItem","this","setState","_this2","isCreateMode","viewArticles","slice","react_default","a","createElement","onClick","map","article","key","title","Component","InputStyle","TextArea","textarea","Create_templateObject","Input","input","Create_templateObject2","Container","_templateObject3","Create","description","Submit","_this$state","Math","random","toString","substr","data","setItem","stringify","Object","toConsumableArray","onChange","event","_event$target","value","name","defineProperty","_this$state2","emptyFields","placeholder","type","rows","cols","src_ArticleList","assign","Article","location","pathname","split","filter","style","marginTop","NotFound","Boolean","hostname","match","ReactDOM","render","BrowserRouter","Switch","Route","path","exact","component","Redirect","to","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6db4534f.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Button = styled.div`\n\tcolor: #fff;\n\tbackground: #ec6088;\n\tfont-weight: 900;\n\tpadding: 12px 22px;\n\tborder-radius: 50px;\n\tdisplay: inline-block;\n\tborder: none;\n\tcursor: pointer;\n\tdisplay: inline-flex;\n\t&:hover {\n\ttext-shadow: 0px 0px 6px rgba(255, 255, 255, 1);\n\tbox-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57);\n\ttransition: all 0.4s ease 0s;\n\t}\n\t${p => p.enabled\n? \n\t`\n\tbackground-color: #ec6088;\n\t`\n:\n\t`\t\n\tbackground-color: #d3d3d3;\n\tpointer-events: none;\n\t`}\n\t@media screen and (max-width: 780px) {\n\t\twidth: 100%;\n\t\tdisplay: inline-block;\n\t\ttext-align: center;\n\t\tmargin: 20px 0 0;\n\t\tpadding: 12px 0;\n  }\n`\n\nexport const StyledFont = styled.div`\n  font-size: 25px;\n  font-weight: 600;\n  margin-right: 20px;\n`","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { Button, StyledFont } from './common'\n\nconst HeaderContainer = styled.div`\n  margin: 30px 0;\n  display: flex;\n  align-items: center;\n  @media screen and (max-width: 780px) {\n    display: block;\n  }\n`\n\nconst ListItem = styled.div`\n  color: #ec6088;\n  font-size: 25px;\n  border-bottom: 1px solid #d3d3d3;\n  padding: 20px 0;\n  cursor: pointer;\n`\n\nclass ArticleList extends Component {\n  state = {\n    articles: []\n  }\n  componentDidMount() {\n    const articles = JSON.parse(window.localStorage.getItem('articles'))\n\n    if (articles) this.setState({ articles })\n  }\n  goToCreate = () => {\n    const { history } = this.props\n    history.push('/create')\n  }\n  goToArticle = (e) => {\n    const { history } = this.props\n    const { id } = e.target\n\n    history.push(`/article/${id}`)\n  }\n\n  render() {\n    const { isCreateMode } = this.props\n    const { articles } = this.state\n    const viewArticles = isCreateMode ? articles.slice(0, 3) : articles\n\n    return (\n      <div>\n        {!isCreateMode && (\n          <HeaderContainer>\n            <StyledFont>Articles</StyledFont>\n            <Button enabled={true} onClick={this.goToCreate}>Add New</Button>\n          </HeaderContainer>\n        )}\n        {viewArticles.map(article => {\n          return <ListItem key={article.id} id={article.id} onClick={this.goToArticle}> {article.title} </ListItem>\n        })}\n      </div>\n    );\n  }\n}\n\nexport default ArticleList;\n","import React, { Component } from 'react';\nimport ArticleList from './ArticleList'\nimport styled from 'styled-components'\nimport { Button, StyledFont } from './common'\n\nconst InputStyle = `\n  width: 100%;\n  border-radius: 5px;\n  outline: none;\n  min-width: 125px;\n  border: 1px solid #eee;\n  box-shadow: 0 8px 6px -6px #d3d3d3;\n  &:focus {\n    box-shadow: 0 0 5px rgba(81, 203, 238, 1);\n    border: 1px solid rgba(81, 203, 238, 1);\n  }\n  ::placeholder{\n    color: #d3d3d3;\n    font-size: 20px;\n  }\n`\n\nconst TextArea = styled.textarea`\n  ${InputStyle};\n  resize: none;\n  width: calc(100% - 5px);\n  height: 90px;\n  margin-bottom: 20px;\n  }\n`\nconst Input = styled.input`\n  ${InputStyle};\n  height: 40px;\n  margin: 30px 0;\n`\nconst Container = styled.div`\n  margin: 30px 0;\n`\n\nclass Create extends Component {\n  state = {\n    title: '',\n    description: ''\n  }\n\n  Submit = () => {\n    const { history } = this.props\n    const { title, description } = this.state\n    const id = Math.random().toString(36).substr(2, 9)\n    const data = JSON.parse(window.localStorage.getItem('articles'))\n    const articles = data ? data : []\n\n    window.localStorage.setItem('articles', JSON.stringify([{ title, description, id }, ...articles]));\n\n    history.push(`/articles/`)\n  }\n\n  onChange = (event) => {\n    const { value, name } = event.target\n\n    this.setState({ [name]: value })\n  }\n\n  render() {\n  const { title, description } = this.state\n\n  const emptyFields = title && description\n    return (\n      <Container>\n        <StyledFont>New Article</StyledFont>\n        <Input\n          placeholder='Article Title'\n          type='text'\n          name='title'\n          onChange={this.onChange} />\n        <TextArea\n          placeholder='Article Text'\n          name='description'\n          rows=\"4\"\n          cols=\"50\"\n          onChange={this.onChange} />\n        <Button enabled={emptyFields} onClick={this.Submit}>Submit</Button>\n        <ArticleList {...this.props} isCreateMode={true} />\n      </Container>\n    );\n  }\n}\n\nexport default Create;\n","import React, { Component } from 'react';\nimport { StyledFont } from './common'\n\nclass Article extends Component {\n  state = {\n    article: [{\n      title: '',\n      description: ''\n    }],\n    id: null\n  }\n\n  componentDidMount () {\n    const { pathname } = this.props.history.location\n    const id = pathname.split('/')[2]\n\n    const articles = JSON.parse(window.localStorage.getItem('articles'))\n    const article = articles && articles.filter(article => article.id === id)[0]\n\n    if (articles) this.setState({ article })\n  }\n\n  render() {\n    const { article } = this.state\n\n    return (\n      <div style={{marginTop: '30px'}}>\n        <StyledFont>{article.title}</StyledFont>\n        <div style={{marginTop: '30px'}}>{article.description}</div>\n      </div>\n    );\n  }\n}\n\nexport default Article;\n","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div>\n        404 Not Found\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Routes } from './Routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport { Route, BrowserRouter, Switch, Redirect } from 'react-router-dom'\nimport Create from './Create'\nimport ArticleList from './ArticleList'\nimport Article from './Article'\nimport NotFound from './NotFound'\n\nexport const Routes = () => (\n  <BrowserRouter>\n    <div>\n      <Switch>\n        <Route path='/articles' exact component={ArticleList} />\n        <Route path='/article/:articleId' exact component={Article} />\n        <Route path='/create' exact component={Create} />\n        <Route component={NotFound} />\n      </Switch>\n      <Redirect to='/articles'/>\n    </div>\n  </BrowserRouter>\n)"],"sourceRoot":""}